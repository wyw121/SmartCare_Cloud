<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartcare.cloud.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.smartcare.cloud.entity.User">
    <id column="id" property="id" />
    <result column="username" property="username" />
    <result column="password" property="password" />
    <result column="real_name" property="realName" />
    <result column="email" property="email" />
    <result column="phone" property="phone" />
    <result column="gender" property="gender" />
    <result column="role_code" property="roleCode" />
    <result column="role_name" property="roleName" />
    <result column="doctor_title" property="doctorTitle" />
    <result column="doctor_speciality" property="doctorSpeciality" />
    <result column="family_relationship" property="familyRelationship" />
    <result column="status" property="status" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
    <result column="is_deleted" property="isDeleted" />
  </resultMap>

  <resultMap id="UserWithRolesMap" type="com.smartcare.cloud.entity.User" extends="BaseResultMap">
    <collection property="roles" ofType="com.smartcare.cloud.entity.Role">
      <id column="role_id" property="id" />
      <result column="role_name" property="roleName" />
      <result column="role_code" property="roleCode" />
      <result column="role_description" property="description" />
      <result column="role_status" property="status" />
    </collection>
  </resultMap>

  <resultMap id="UserWithPermissionsMap" type="com.smartcare.cloud.entity.User"
    extends="BaseResultMap">
    <collection property="permissions" ofType="com.smartcare.cloud.entity.Permission">
      <id column="permission_id" property="id" />
      <result column="permission_name" property="permissionName" />
      <result column="permission_code" property="permissionCode" />
      <result column="permission_type" property="permissionType" />
      <result column="permission_path" property="permissionPath" />
      <result column="permission_description" property="description" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List"> id, username, password, real_name, email, phone, gender,
    role_code, role_name, doctor_title, doctor_speciality, family_relationship, status,
    create_time, update_time, is_deleted </sql>

  <!-- 根据用户名查询用户 -->
  <select id="selectByUsername" resultMap="BaseResultMap"> SELECT <include refid="Base_Column_List" />
    FROM sys_user WHERE username = #{username} AND is_deleted = 0 </select>

  <!-- 根据邮箱查询用户 -->
  <select id="selectByEmail" resultMap="BaseResultMap"> SELECT <include refid="Base_Column_List" />
    FROM sys_user WHERE email = #{email} AND is_deleted = 0 </select>

  <!-- 根据手机号查询用户 -->
  <select id="selectByPhone" resultMap="BaseResultMap"> SELECT <include refid="Base_Column_List" />
    FROM sys_user WHERE phone = #{phone} AND is_deleted = 0 </select>

  <!-- 查询用户及其角色信息 -->
  <select id="selectUserWithRoles" resultMap="UserWithRolesMap"> SELECT u.id, u.username,
    u.real_name, u.email, u.phone, u.gender, u.role_code, u.role_name,
    u.doctor_title, u.doctor_speciality, u.family_relationship, u.status, 
    u.create_time, u.update_time, r.id as role_id, r.role_name as role_name, r.role_code as role_code,
    r.description as role_description, r.status as role_status FROM sys_user u LEFT JOIN
    sys_user_role ur ON u.id = ur.user_id LEFT JOIN sys_role r ON ur.role_id = r.id WHERE u.id =
    #{userId} AND u.is_deleted = 0 </select>

  <!-- 查询用户的权限信息 -->
  <select id="selectUserPermissions" resultMap="UserWithPermissionsMap"> SELECT u.id, u.username,
    u.real_name, u.role_code, u.role_name, p.id as permission_id, p.permission_name,
    p.permission_code, p.permission_type, p.permission_path, p.description as permission_description
    FROM sys_user u LEFT JOIN sys_user_role ur ON u.id = ur.user_id LEFT JOIN sys_role_permission rp
    ON ur.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE u.id =
    #{userId} AND u.is_deleted = 0 AND u.status = 1 AND p.status = 1 </select>

  <!-- 根据角色编码查询用户列表 -->
  <select id="selectByRoleCode" resultMap="BaseResultMap"> SELECT <include refid="Base_Column_List" />
    FROM sys_user WHERE role_code = #{roleCode} AND is_deleted = 0 ORDER BY create_time DESC </select>

  <!-- 更新用户登录信息 - 临时禁用，字段不存在 -->
  <!--
  <update id="updateLoginInfo">
    UPDATE sys_user SET login_count = login_count + 1, last_login_time = #{loginTime}, 
           last_login_ip = #{loginIp}, update_time = NOW() 
    WHERE id = #{userId}
  </update>
  -->

  <!-- 检查用户名是否存在 -->
  <select id="checkUsernameExists" resultType="java.lang.Boolean"> SELECT COUNT(1) > 0 FROM sys_user
    WHERE username = #{username} AND is_deleted = 0 </select>

  <!-- 检查邮箱是否存在 -->
  <select id="checkEmailExists" resultType="java.lang.Boolean"> SELECT COUNT(1) > 0 FROM sys_user
    WHERE email = #{email} AND is_deleted = 0 </select>

  <!-- 检查手机号是否存在 -->
  <select id="checkPhoneExists" resultType="java.lang.Boolean"> SELECT COUNT(1) > 0 FROM sys_user
    WHERE phone = #{phone} AND is_deleted = 0 </select>

  <!-- 分页查询用户列表 -->
  <select id="selectUserPage" resultMap="BaseResultMap"> SELECT <include refid="Base_Column_List" />
    FROM sys_user WHERE is_deleted = 0 <if test="username != null and username != ''"> AND username
    LIKE CONCAT('%', #{username}, '%') </if>
        <if test="realName != null and realName != ''"> AND
    real_name LIKE CONCAT('%', #{realName}, '%') </if>
        <if test="roleCode != null and roleCode != ''">
    AND role_code = #{roleCode} </if>
        <if test="status != null"> AND status = #{status} </if> ORDER
    BY create_time DESC </select>

  <!-- 统计用户数量 -->
  <select id="countByRoleCode" resultType="java.lang.Integer"> SELECT COUNT(1) FROM sys_user WHERE
    role_code = #{roleCode} AND is_deleted = 0 <if test="status != null"> AND status = #{status} </if>
  </select>

  <!-- 自定义插入用户方法 -->
  <insert id="insertUser" parameterType="com.smartcare.cloud.entity.User" useGeneratedKeys="true"
    keyProperty="id"> INSERT INTO sys_user ( username, password, real_name, gender, phone, email,
    role_code, role_name, doctor_title, doctor_speciality, doctor_license_number,
    doctor_experience_years, family_relationship, family_elderly_ids, status, description,
    is_deleted ) VALUES ( #{username}, #{password}, #{realName}, #{gender}, #{phone}, #{email},
    #{roleCode}, #{roleName}, #{doctorTitle}, #{doctorSpeciality}, #{doctorLicenseNumber},
    #{doctorExperienceYears}, #{familyRelationship}, #{familyElderlyIds}, #{status}, #{description},
    #{isDeleted} ) </insert>

</mapper>